<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="3" ignored="2" total="8" passed="3">
  <reporter-output>
  </reporter-output>
  <suite name="Regression" duration-ms="15104" started-at="2021-10-13T18:43:48 CDT" finished-at="2021-10-13T18:44:03 CDT">
    <groups>
    </groups>
    <test name="Computer Order flows" duration-ms="15104" started-at="2021-10-13T18:43:48 CDT" finished-at="2021-10-13T18:44:03 CDT">
      <class name="tests.order.BuildStandardComputerTest">
        <test-method status="FAIL" signature="testBuildingStandardComputer(testdata.purchasing.ComputerDataObject)[pri:0, instance:tests.order.BuildStandardComputerTest@4a067c25]" name="testBuildingStandardComputer" duration-ms="9349" started-at="2021-10-13T18:43:48 CDT" description="Buying a standard computer" data-provider="standardCompsDataSet" finished-at="2021-10-13T18:43:58 CDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[CheapComputer{processorType='INTEL_22_GHZ', ram='RAM_8GB', hdd='HDD_400GB', os='null', software='null'}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[[ERR] Total price is not correct! expected [960.0] but found [1410.0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: [ERR] Total price is not correct! expected [960.0] but found [1410.0]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEquals(Assert.java:701)
at testflows.order.computer.BuyingComputerFlow.verifyComputerAdded(BuyingComputerFlow.java:68)
at tests.order.BuildStandardComputerTest.testBuildingStandardComputer(BuildStandardComputerTest.java:29)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBuildingStandardComputer -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.order.BuildStandardComputerTest@4a067c25]" name="afterMethod" is-config="true" duration-ms="760" started-at="2021-10-13T18:43:58 CDT" finished-at="2021-10-13T18:43:58 CDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testBuildingStandardComputer status=FAILURE method=BuildStandardComputerTest.testBuildingStandardComputer(testdata.purchasing.ComputerDataObject)[pri:0, instance:tests.order.BuildStandardComputerTest@4a067c25] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="FAIL" signature="testBuildingStandardComputer(testdata.purchasing.ComputerDataObject)[pri:0, instance:tests.order.BuildStandardComputerTest@4a067c25]" name="testBuildingStandardComputer" duration-ms="1972" started-at="2021-10-13T18:43:58 CDT" description="Buying a standard computer" data-provider="standardCompsDataSet" finished-at="2021-10-13T18:44:00 CDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[CheapComputer{processorType='INTEL_25_GHZ', ram='RAM_4GB', hdd='HDD_400GB', os='null', software='null'}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[[ERR] Total price is not correct! expected [935.0] but found [1385.0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: [ERR] Total price is not correct! expected [935.0] but found [1385.0]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEquals(Assert.java:701)
at testflows.order.computer.BuyingComputerFlow.verifyComputerAdded(BuyingComputerFlow.java:68)
at tests.order.BuildStandardComputerTest.testBuildingStandardComputer(BuildStandardComputerTest.java:29)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBuildingStandardComputer -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.order.BuildStandardComputerTest@4a067c25]" name="afterMethod" is-config="true" duration-ms="376" started-at="2021-10-13T18:44:00 CDT" finished-at="2021-10-13T18:44:01 CDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testBuildingStandardComputer status=FAILURE method=BuildStandardComputerTest.testBuildingStandardComputer(testdata.purchasing.ComputerDataObject)[pri:0, instance:tests.order.BuildStandardComputerTest@4a067c25] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="FAIL" signature="testBuildingStandardComputer(testdata.purchasing.ComputerDataObject)[pri:0, instance:tests.order.BuildStandardComputerTest@4a067c25]" name="testBuildingStandardComputer" duration-ms="2057" started-at="2021-10-13T18:44:01 CDT" description="Buying a standard computer" data-provider="standardCompsDataSet" finished-at="2021-10-13T18:44:03 CDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[CheapComputer{processorType='INTEL_22_GHZ', ram='RAM_2GB', hdd='HDD_400GB', os='null', software='null'}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[[ERR] Total price is not correct! expected [900.0] but found [1350.0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: [ERR] Total price is not correct! expected [900.0] but found [1350.0]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEquals(Assert.java:701)
at testflows.order.computer.BuyingComputerFlow.verifyComputerAdded(BuyingComputerFlow.java:68)
at tests.order.BuildStandardComputerTest.testBuildingStandardComputer(BuildStandardComputerTest.java:29)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBuildingStandardComputer -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.order.BuildStandardComputerTest@4a067c25]" name="afterMethod" is-config="true" duration-ms="356" started-at="2021-10-13T18:44:03 CDT" finished-at="2021-10-13T18:44:03 CDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testBuildingStandardComputer status=FAILURE method=BuildStandardComputerTest.testBuildingStandardComputer(testdata.purchasing.ComputerDataObject)[pri:0, instance:tests.order.BuildStandardComputerTest@4a067c25] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- tests.order.BuildStandardComputerTest -->
      <class name="tests.order.BuildCheapComputerTest">
        <test-method status="PASS" signature="instantiateDriverObject()[pri:0, instance:tests.order.BuildCheapComputerTest@4089713]" name="instantiateDriverObject" is-config="true" duration-ms="38" started-at="2021-10-13T18:43:48 CDT" finished-at="2021-10-13T18:43:48 CDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- instantiateDriverObject -->
        <test-method status="PASS" signature="testBuildingCheapComputer(testdata.purchasing.ComputerDataObject)[pri:0, instance:tests.order.BuildCheapComputerTest@4089713]" name="testBuildingCheapComputer" duration-ms="8921" started-at="2021-10-13T18:43:48 CDT" description="Buying a cheap computer" data-provider="cheapCompsDataSet" finished-at="2021-10-13T18:43:57 CDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[CheapComputer{processorType='PROCESSOR_FAST', ram='RAM_8GB', hdd='HDD_400GB', os='null', software='null'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBuildingCheapComputer -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.order.BuildCheapComputerTest@4089713]" name="afterMethod" is-config="true" duration-ms="90" started-at="2021-10-13T18:43:57 CDT" finished-at="2021-10-13T18:43:57 CDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testBuildingCheapComputer status=SUCCESS method=BuildCheapComputerTest.testBuildingCheapComputer(testdata.purchasing.ComputerDataObject)[pri:0, instance:tests.order.BuildCheapComputerTest@4089713] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="testBuildingCheapComputer(testdata.purchasing.ComputerDataObject)[pri:0, instance:tests.order.BuildCheapComputerTest@4089713]" name="testBuildingCheapComputer" duration-ms="2778" started-at="2021-10-13T18:43:57 CDT" description="Buying a cheap computer" data-provider="cheapCompsDataSet" finished-at="2021-10-13T18:44:00 CDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[CheapComputer{processorType='PROCESSOR_FAST', ram='RAM_4GB', hdd='HDD_400GB', os='null', software='null'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBuildingCheapComputer -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.order.BuildCheapComputerTest@4089713]" name="afterMethod" is-config="true" duration-ms="20" started-at="2021-10-13T18:44:00 CDT" finished-at="2021-10-13T18:44:00 CDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testBuildingCheapComputer status=SUCCESS method=BuildCheapComputerTest.testBuildingCheapComputer(testdata.purchasing.ComputerDataObject)[pri:0, instance:tests.order.BuildCheapComputerTest@4089713] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="testBuildingCheapComputer(testdata.purchasing.ComputerDataObject)[pri:0, instance:tests.order.BuildCheapComputerTest@4089713]" name="testBuildingCheapComputer" duration-ms="2071" started-at="2021-10-13T18:44:00 CDT" description="Buying a cheap computer" data-provider="cheapCompsDataSet" finished-at="2021-10-13T18:44:02 CDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[CheapComputer{processorType='PROCESSOR_FAST', ram='RAM_2GB', hdd='HDD_400GB', os='null', software='null'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBuildingCheapComputer -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.order.BuildCheapComputerTest@4089713]" name="afterMethod" is-config="true" duration-ms="14" started-at="2021-10-13T18:44:02 CDT" finished-at="2021-10-13T18:44:02 CDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testBuildingCheapComputer status=SUCCESS method=BuildCheapComputerTest.testBuildingCheapComputer(testdata.purchasing.ComputerDataObject)[pri:0, instance:tests.order.BuildCheapComputerTest@4089713] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="clearCookies()[pri:0, instance:tests.order.BuildCheapComputerTest@4089713]" name="clearCookies" is-config="true" duration-ms="168" started-at="2021-10-13T18:44:03 CDT" finished-at="2021-10-13T18:44:03 CDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clearCookies -->
      </class> <!-- tests.order.BuildCheapComputerTest -->
    </test> <!-- Computer Order flows -->
  </suite> <!-- Regression -->
</testng-results>
